syntax v1.0;

using "Omnius.Core.Cryptography";
namespace "Omnius.Core.Net.Connections.Secure.V1.Internal";
option csharp_access_level "internal";

enum KeyExchangeAlgorithmType : uint8 {
    Unknown = 0,
    EcDh_P521_Sha2_256 = 1,
}

enum KeyDerivationAlgorithmType : uint8 {
    Unknown = 0,
    Pbkdf2 = 1,
}

enum HashAlgorithmType : uint8 {
    Unknown = 0,
    Sha2_256 = 1,
}

enum CryptoAlgorithmType : uint8 {
    Unknown = 0,
    Aes_Gcm_256 = 1,
}

enum AuthenticationType : uint8 {
    None = 0,
    Signature = 1,
}

message ProfileMessage {
    SessionId: bytes(capacity: 32),
    AuthenticationType: AuthenticationType,
    KeyExchangeAlgorithmTypes: vector<KeyExchangeAlgorithmType>(capacity: 32),
    KeyDerivationAlgorithmTypes: vector<KeyDerivationAlgorithmType>(capacity: 32),
    CryptoAlgorithmTypes: vector<CryptoAlgorithmType>(capacity: 32),
    HashAlgorithmTypes: vector<HashAlgorithmType>(capacity: 32),
}

message VerificationMessage {
    ProfileMessage: ProfileMessage,
    AgreementPublicKey: OmniAgreementPublicKey,
}

message AuthenticationMessage {
    CreationTime: timestamp,
    Hash: bytes(capacity: 32),
    Certificate: OmniCertificate?,
}
