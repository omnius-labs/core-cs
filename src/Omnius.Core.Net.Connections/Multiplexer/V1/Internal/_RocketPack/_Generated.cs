// <auto-generated/>
#nullable enable

namespace Omnius.Core.Net.Connections.Multiplexer.V1.Internal
{
    internal sealed partial class ProfileMessage : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage>.Formatter;
        public static global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage>.Empty;

        static ProfileMessage()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage>.Empty = new global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage(0, 0);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ProfileMessage(uint maxMessageSize, uint maxQueueSize)
        {
            this.MaxMessageSize = maxMessageSize;
            this.MaxQueueSize = maxQueueSize;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (maxMessageSize != default) ___h.Add(maxMessageSize.GetHashCode());
                if (maxQueueSize != default) ___h.Add(maxQueueSize.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public uint MaxMessageSize { get; }
        public uint MaxQueueSize { get; }

        public static global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage? left, global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage? left, global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage) return false;
            return this.Equals((global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage)other);
        }
        public bool Equals(global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.MaxMessageSize != target.MaxMessageSize) return false;
            if (this.MaxQueueSize != target.MaxQueueSize) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.MaxMessageSize != 0)
                {
                    w.Write((uint)1);
                    w.Write(value.MaxMessageSize);
                }
                if (value.MaxQueueSize != 0)
                {
                    w.Write((uint)2);
                    w.Write(value.MaxQueueSize);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                uint p_maxMessageSize = 0;
                uint p_maxQueueSize = 0;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_maxMessageSize = r.GetUInt32();
                                break;
                            }
                        case 2:
                            {
                                p_maxQueueSize = r.GetUInt32();
                                break;
                            }
                    }
                }

                return new global::Omnius.Core.Net.Connections.Multiplexer.V1.Internal.ProfileMessage(p_maxMessageSize, p_maxQueueSize);
            }
        }
    }
}
